{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/aly/Documents/Hackathons/Appathon/Code/OurWorld/src/features/WordOftheDay.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\n\nvar WordOftheDay = function WordOftheDay() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  function fetchWord() {\n    fetch('https://random-words-api.vercel.app/word').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return console.log(data[0].word);\n    });\n  }\n\n  function fetchDefinition(word) {\n    fetch(\"https://wordsapiv1.p.mashape.com/words/\" + word + \"/definitions\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  }\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.container,\n    onPress: function onPress() {\n      setIsVisible(true);\n      fetchWord();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"fade\",\n    visible: isVisible,\n    swipeDirection: \"down\",\n    onSwipeComplete: function onSwipeComplete(e) {\n      setIsVisible(false);\n    },\n    presentationStyle: \"pageSheet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#ff5c40',\n      margin: 10,\n      width: 30,\n      height: 30,\n      borderRadius: 15,\n      alignItems: 'center',\n      justifyContent: 'center',\n      shadowOffset: {\n        width: 5,\n        height: 5\n      },\n      shadowRadius: 12,\n      shadowOpacity: 0.25,\n      borderRadius: 30\n    },\n    onPress: function onPress() {\n      return setIsVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"X\")), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"OK\")), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Word of the Day\"), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      padding: 20,\n      fontStyle: 'italic'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"enjwen\"), React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      color: '#3daeff',\n      padding: 0,\n      fontStyle: 'italic',\n      textDecorationLine: 'underline'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Learn more\"));\n};\n\nexport default WordOftheDay;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    borderRadius: 30,\n    marginTop: 40,\n    margin: 10,\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 3,\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/Users/aly/Documents/Hackathons/Appathon/Code/OurWorld/src/features/WordOftheDay.js"],"names":["React","useState","WordOftheDay","isVisible","setIsVisible","fetchWord","fetch","then","response","json","data","console","log","word","fetchDefinition","styles","container","e","backgroundColor","margin","width","height","borderRadius","alignItems","justifyContent","shadowOffset","shadowRadius","shadowOpacity","textAlign","fontWeight","fontSize","padding","fontStyle","color","textDecorationLine","StyleSheet","create","flex","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Text, StyleSheet, TouchableOpacity,  Modal } from 'react-native'\n//import Modal from 'react-native-modal'\n\n\nconst WordOftheDay = () => {\n\n    const [isVisible, setIsVisible] = useState(false)\n\n    function fetchWord (){\n        fetch('https://random-words-api.vercel.app/word')\n        .then(response => response.json())\n        .then(data => console.log(data[0].word));\n    }\n\n    function fetchDefinition (word){\n        fetch(`https://wordsapiv1.p.mashape.com/words/${word}/definitions`)\n        .then(response => response.json())\n        .then(data => console.log(data));\n    }\n\n\n    return (\n        <TouchableOpacity style={styles.container} onPress={()=>{setIsVisible(true); (fetchWord())}}>\n            <Modal animationType=\"fade\" visible={isVisible} swipeDirection=\"down\" onSwipeComplete={(e) => { setIsVisible(false) }} presentationStyle='pageSheet'>\n                <TouchableOpacity style={{backgroundColor: '#ff5c40', margin: 10, width: 30, height: 30, borderRadius: 15, alignItems: 'center', justifyContent: 'center', shadowOffset: {\n      width: 5,\n      height: 5,\n    },\n    shadowRadius: 12,\n    shadowOpacity: 0.25,\n    borderRadius: 30,}} onPress={()=>setIsVisible(false)}>\n                    <Text style={{textAlign: 'center'}}>X</Text>\n                </TouchableOpacity>\n                <Text>OK</Text>\n            </Modal>\n            <Text style={{fontWeight: 'bold', fontSize:40,}}>Word of the Day</Text>\n            <Text style={{fontSize: 30, padding: 20, fontStyle: 'italic'}}>enjwen</Text>\n            <Text style={{fontSize: 17, color: '#3daeff', padding: 0, fontStyle: 'italic', textDecorationLine: 'underline'}}>Learn more</Text>\n            \n        </TouchableOpacity>\n    )\n}\n\nexport default WordOftheDay\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        borderRadius: 30,\n        marginTop: 40,\n        margin: 10,\n        shadowOffset: {\n            width: 1,\n            height: 1\n          },\n          shadowOpacity: 0.8,\n          shadowRadius: 3,\n        padding: 20,\n    }\n})\n\n"]},"metadata":{},"sourceType":"module"}